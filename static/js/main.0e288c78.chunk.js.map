{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","addNote","type","placeholder","value","searchText","onChange","onSearch","Note","updateTitle","e","updatedValue","target","editId","_this","note","id","onType","updateDescription","clickDelete","deleteId","deleteNote","this","title","description","Component","keepMatches","doesMatchSearch","NotesList","noteElement","notes","filter","map","src_Note","key","App","state","Date","now","newNotes","concat","Object","toConsumableArray","setState","updatedKey","updatedNotes","objectSpread","toLowerCase","titleMatch","includes","descriptionMatch","match","savedNotes","JSON","stringify","localStorage","setItem","getItem","savedState","parse","src_Header","src_NotesList","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.0e288c78.chunk.js","sourcesContent":["import React from \"react\";\nimport './index.css'\n\nconst Header = (props) => (\n    <header className=\"app-header\">\n        <h1 className=\"app-header__title\">\n        Super Sticky Notes\n        </h1>\n        <aside className=\"app-header__controls\">\n        <button className=\"add-new\" onClick={props.addNote}>\n            + New Note\n        </button>\n        <input \n            className=\"search\" \n            type=\"text\" \n            placeholder=\"Type here to search...\" \n            value={props.searchText}\n            onChange={props.onSearch}\n        />\n        </aside>\n    </header>\n);\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Note extends Component {\n  updateTitle = (e) => {\n    const updatedValue = e.target.value;\n    const editId = this.props.note.id;\n    this.props.onType(editId, \"title\", updatedValue)\n  };\n  updateDescription = (e) => {\n    const updatedValue = e.target.value;\n    const editId = this.props.note.id;\n    this.props.onType(editId, \"description\", updatedValue)\n  };\n\n  clickDelete = () => {\n    const deleteId = this.props.note.id;\n    this.props.deleteNote(deleteId);\n  };\n  render() {\n    return (\n    <li className=\"note\">\n      <input \n        className=\"note__title\" \n        type=\"text\" \n        placeholder=\"Title\" \n        value={this.props.note.title}\n        onChange={this.updateTitle}\n      />\n      <textarea \n        className=\"note__description\"\n        placeholder=\"Description...\" \n        value={this.props.note.description}\n        onChange={this.updateDescription}\n      />\n      <span \n        className=\"note__delete\"\n        onClick={this.clickDelete}\n      >\n        X\n      </span>\n    </li>\n    )\n  }\n};\n\nexport default Note;","import React, { Component } from \"react\";\nimport Note from \"./Note\";\n\nconst keepMatches = (note) => note.doesMatchSearch;\n\nconst NotesList = (props) => {\n  const renderNote = (note) => <Note note={note} key={note.id} onType={props.onType} deleteNote={props.deleteNote} />\n\n  const matches  = props.notes.filter(keepMatches);\n  const noteElement = matches.map(renderNote);\n  return   <ul className=\"notes-list\">{noteElement}</ul>\n\n};\n\nexport default NotesList;","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport NotesList from \"./NotesList\";\nimport './index.css'\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      },\n    ],\n    searchText: \"\",\n  };\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n  onType = (editId, updatedKey, updatedValue) => {\n    const updateOnIdMatch = (note) => {\n      if (note.id !== editId) {\n        return note\n      } \n      else if (updatedKey === \"title\") {\n        return {\n          ...note,\n          title: updatedValue \n        }\n      } else {\n        return {\n          ...note, \n          description: updatedValue\n        }\n      }\n    };\n    const updatedNotes = this.state.notes.map(updateOnIdMatch)\n    this.setState({ notes: updatedNotes });\n  };\n  onSearch = (e) => {\n    const searchText = e.target.value.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!searchText) {\n        return {\n          ...note, \n          doesMatchSearch: true\n        };\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(searchText);\n        const descriptionMatch = description.includes(searchText)\n        const match = titleMatch || descriptionMatch;\n        return {\n          ...note,\n          doesMatchSearch: match\n        };\n      }\n    });\n    this.setState({\n      searchText: searchText,\n      notes: updatedNotes\n    });\n  };\n  deleteNote = (deleteId) => {\n    const doNotDelete = (note) => note.id !== deleteId\n    const updatedNotes = this.state.notes.filter(doNotDelete);\n    this.setState({ notes: updatedNotes });\n  };\n  componentDidUpdate() {\n    const savedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", savedNotes);\n  }; \n  componentDidMount() {\n    const savedNotes = localStorage.getItem(\"savedNotes\");\n    if (savedNotes) {\n    const savedState = JSON.parse(savedNotes);\n    this.setState({ notes: savedState });\n  }\n  };\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList notes={this.state.notes} onType={this.onType} deleteNote={this.deleteNote} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}