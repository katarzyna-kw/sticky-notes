{"ast":null,"code":"import _classCallCheck from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/Note.js\";\nimport React, { Component } from \"react\"; // Add updateTitle and updateDescription methods to the Note component that are called by the event listeners added to the text input and textbox elements. These methods call the onType method passed down from App component as a prop, calling it with the Note's id, either title or description for the updatedKey parameter, and the updatedValue which you will get by interrogating the change event from the text input or textbox element.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Note = /*#__PURE__*/function (_Component) {\n  _inherits(Note, _Component);\n\n  var _super = _createSuper(Note);\n\n  function Note() {\n    _classCallCheck(this, Note);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Note, [{\n    key: \"render\",\n    value: function render() {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"note__title\",\n          type: \"text\",\n          placeholder: \"Title\",\n          value: props.note.title // onChange={}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"note__description\",\n          placeholder: \"Description...\",\n          value: props.note.description // onChange={}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__delete\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this);\n    }\n  }]);\n\n  return Note;\n}(Component);\n\nexport default Note;","map":{"version":3,"sources":["/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/Note.js"],"names":["React","Component","Note","props","note","title","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;IAGMC,I;;;;;;;;;;;;;WACJ,kBAAS;AACP;AAAA;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,OAHd;AAIE,UAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAWC,KAJpB,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWE,WAHpB,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD;;;;EAlBgBL,S;;AAqBnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\n// Add updateTitle and updateDescription methods to the Note component that are called by the event listeners added to the text input and textbox elements. These methods call the onType method passed down from App component as a prop, calling it with the Note's id, either title or description for the updatedKey parameter, and the updatedValue which you will get by interrogating the change event from the text input or textbox element.\n\n\nclass Note extends Component {\n  render() {\n    <li className=\"note\">\n      <input \n        className=\"note__title\" \n        type=\"text\" \n        placeholder=\"Title\" \n        value={props.note.title}\n        // onChange={}\n      />\n      <textarea \n        className=\"note__description\"\n        placeholder=\"Description...\" \n        value={props.note.description}\n        // onChange={}\n      />\n      <span className=\"note__delete\">X</span>\n    </li>\n  }\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}