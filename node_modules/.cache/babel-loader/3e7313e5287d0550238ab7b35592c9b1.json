{"ast":null,"code":"var _jsxFileName = \"/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/NotesList.js\",\n    _this = this;\n\nimport Note from \"./Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar keepSearchMatches = function keepSearchMatches(note) {\n  return note.doesMatchSearch;\n};\n\nvar NotesList = function NotesList(props) {\n  var renderNote = function renderNote(note) {\n    return /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      onType: props.onType\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var searchMatches = props.notes.filter(keepSearchMatches);\n  var noteElement = searchMatches.map(renderNote);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"notes-list\",\n    children: noteElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = NotesList;\nexport default NotesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"sources":["/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/NotesList.js"],"names":["Note","keepSearchMatches","note","doesMatchSearch","NotesList","props","renderNote","onType","id","searchMatches","notes","filter","noteElement","map"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD;AAAA,SAAUA,IAAI,CAACC,eAAf;AAAA,CAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,IAAD;AAAA,wBACjB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAgC,MAAA,MAAM,EAAEG,KAAK,CAACE;AAA9C,OAAuBL,IAAI,CAACM,EAA5B;AAAA;AAAA;AAAA;AAAA,aADiB;AAAA,GAAnB;;AAIA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBV,iBAAnB,CAAtB;AACA,MAAMW,WAAW,GAAGH,aAAa,CAACI,GAAd,CAAkBP,UAAlB,CAApB;AACA,sBAAS;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAA4BM;AAA5B;AAAA;AAAA;AAAA;AAAA,WAAT;AAED,CATD;;KAAMR,S;AAWN,eAAeA,SAAf","sourcesContent":["import Note from \"./Note\";\n\nconst keepSearchMatches = (note) => note.doesMatchSearch;\n\nconst NotesList = (props) => {\n  const renderNote = (note) => (\n    <Note note={note} key={note.id} onType={props.onType} />\n  );\n  \n  const searchMatches = props.notes.filter(keepSearchMatches);\n  const noteElement = searchMatches.map(renderNote);\n  return   <ul className=\"notes-list\">{noteElement}</ul>\n\n};\n\nexport default NotesList;"]},"metadata":{},"sourceType":"module"}