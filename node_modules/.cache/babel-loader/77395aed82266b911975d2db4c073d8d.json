{"ast":null,"code":"import _objectSpread from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport NotesList from \"./NotesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      notes: [{\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }],\n      searchText: \"\"\n    };\n\n    _this.addNote = function () {\n      var newNote = {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      };\n      var newNotes = [newNote].concat(_toConsumableArray(_this.state.notes));\n\n      _this.setState({\n        notes: newNotes\n      });\n    };\n\n    _this.onType = function (editMeId, updatedKey, updatedValue) {\n      var updateIdMatch = function updateIdMatch(note) {\n        if (note.id !== editMeId) {\n          return note;\n        } else {\n          if (updatedKey === \"title\") {\n            return _objectSpread(_objectSpread({}, note), {}, {\n              title: updatedValue\n            });\n          } else {\n            return _objectSpread(_objectSpread({}, note), {}, {\n              description: updatedValue\n            });\n          }\n        }\n      };\n\n      var updatedNotes = _this.state.notes.map(updateIdMatch);\n\n      _this.setState({\n        notes: updatedNotes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          searchText: this.state.searchText,\n          addNote: this.addNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n          notes: this.state.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/App.js"],"names":["React","Component","Header","NotesList","App","state","notes","id","Date","now","title","description","doesMatchSearch","searchText","addNote","newNote","newNotes","setState","onType","editMeId","updatedKey","updatedValue","updateIdMatch","note","updatedNotes","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;IAEMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADN;AAEEC,QAAAA,KAAK,EAAE,EAFT;AAGEC,QAAAA,WAAW,EAAE,EAHf;AAIEC,QAAAA,eAAe,EAAE;AAJnB,OADK,CADD;AASNC,MAAAA,UAAU,EAAE;AATN,K;;UAWRC,O,GAAU,YAAM;AACd,UAAMC,OAAO,GAAG;AACdR,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdC,QAAAA,KAAK,EAAE,EAFO;AAGdC,QAAAA,WAAW,EAAE,EAHC;AAIdC,QAAAA,eAAe,EAAE;AAJH,OAAhB;AAMA,UAAMI,QAAQ,IAAID,OAAJ,4BAAgB,MAAKV,KAAL,CAAWC,KAA3B,EAAd;;AACA,YAAKW,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEU;AAAT,OAAd;AACD,K;;UACDE,M,GAAS,UAACC,QAAD,EAAWC,UAAX,EAAuBC,YAAvB,EAAwC;AAC/C,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,YAAIA,IAAI,CAAChB,EAAL,KAAWY,QAAf,EAAyB;AACvB,iBAAOI,IAAP;AACD,SAFD,MAEO;AACL,cAAIH,UAAU,KAAK,OAAnB,EAA4B;AAC1B,mDACKG,IADL;AACWb,cAAAA,KAAK,EAAEW;AADlB;AAGD,WAJD,MAIO;AACL,mDACKE,IADL;AACWZ,cAAAA,WAAW,EAAEU;AADxB;AAGD;AACF;AACF,OAdD;;AAeA,UAAMG,YAAY,GAAG,MAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqBH,aAArB,CAArB;;AACA,YAAKL,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEkB;AAAT,OAAd;AACD,K;;;;;;;WACD,kBAAS;AACP,0BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWQ,UAA/B;AAA2C,UAAA,OAAO,EAAE,KAAKC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;;;EAhDeL,S;;AAiDjB;AAED,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport NotesList from \"./NotesList\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      },\n    ],\n    searchText: \"\",\n  };\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    }\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });    \n  };\n  onType = (editMeId, updatedKey, updatedValue) => {\n    const updateIdMatch = (note) => {\n      if (note.id !==editMeId) {\n        return note\n      } else {\n        if (updatedKey === \"title\") {\n          return {\n            ...note, title: updatedValue\n          };\n        } else {\n          return {\n            ...note, description: updatedValue\n          }\n        }\n      }\n    };\n    const updatedNotes = this.state.notes.map(updateIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n  render() {\n    return (\n      <div>\n        <Header searchText={this.state.searchText} addNote={this.addNote}/>\n        <NotesList notes={this.state.notes} />\n      </div>\n    );\n  }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}