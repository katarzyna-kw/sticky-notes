{"ast":null,"code":"import _classCallCheck from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/katarzynakoch/.nvm/versions/node/v15.8.0/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/Note.js\";\nimport React, { Component } from \"react\"; //These methods call the onType method passed down from App component as a prop, calling it with the Note's id, either title or description for the updatedKey parameter, and the updatedValue which you will get by interrogating the change event from the text input or textbox element.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Note = /*#__PURE__*/function (_Component) {\n  _inherits(Note, _Component);\n\n  var _super = _createSuper(Note);\n\n  function Note() {\n    var _this;\n\n    _classCallCheck(this, Note);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.updateTitle = function (e) {\n      var updatedValue = e.target.value;\n      var editId = note.id;\n    };\n\n    _this.updateDescription = function () {};\n\n    return _this;\n  }\n\n  _createClass(Note, [{\n    key: \"render\",\n    value: function render() {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"note__title\",\n          type: \"text\",\n          placeholder: \"Title\",\n          value: props.note.title,\n          onChange: this.updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"note__description\",\n          placeholder: \"Description...\",\n          value: props.note.description,\n          onChange: this.updateDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"note__delete\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this);\n    }\n  }]);\n\n  return Note;\n}(Component);\n\nexport default Note;","map":{"version":3,"sources":["/Users/katarzynakoch/Desktop/kathys_coding/react-projects/sticky-notes-app/src/Note.js"],"names":["React","Component","Note","updateTitle","e","updatedValue","target","value","editId","note","id","updateDescription","props","title","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;;;;IAGMC,I;;;;;;;;;;;;;;;;UACJC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,EAApB;AACD,K;;UACDC,iB,GAAoB,YAAM,CAEzB,C;;;;;;;WACD,kBAAS;AACP;AAAA;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,OAHd;AAIE,UAAA,KAAK,EAAEC,KAAK,CAACH,IAAN,CAAWI,KAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKV;AALjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,KAAK,EAAES,KAAK,CAACH,IAAN,CAAWK,WAHpB;AAIE,UAAA,QAAQ,EAAE,KAAKH;AAJjB;AAAA;AAAA;AAAA;AAAA,gBARF,eAcE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBD;;;;EAzBgBV,S;;AA4BnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\n\n//These methods call the onType method passed down from App component as a prop, calling it with the Note's id, either title or description for the updatedKey parameter, and the updatedValue which you will get by interrogating the change event from the text input or textbox element.\n\n\nclass Note extends Component {\n  updateTitle = (e) => {\n    const updatedValue = e.target.value;\n    const editId = note.id\n  };\n  updateDescription = () => {\n\n  }\n  render() {\n    <li className=\"note\">\n      <input \n        className=\"note__title\" \n        type=\"text\" \n        placeholder=\"Title\" \n        value={props.note.title}\n        onChange={this.updateTitle}\n      />\n      <textarea \n        className=\"note__description\"\n        placeholder=\"Description...\" \n        value={props.note.description}\n        onChange={this.updateDescription}\n      />\n      <span className=\"note__delete\">X</span>\n    </li>\n  }\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}